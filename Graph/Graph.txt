그래프
    1. 위치 데이터를 이용하여 장소마다 걸리는 거리, 시간으로 최소 경로 찾기
    2. 사회 연결망 (페이스북)

    데이터 간 다양한 연결 관계를 다룰 때 사용
    통신 : 수많은 컴퓨터들의 연결 관계인 인터넷
    생물 : 유전자와 단백질의 상호 작용 관계

    링크드 리스트 노드
        data, next 사용해서 선형적 구조 이룸

    그래포 노드
        edge : 서로 인접해 있다 (연결되어 있다)
        경로 : edge 를 경유하여 가는 길, 거리는 edge 갯수
        두 노드간 경로는 경우의 수가 많음
        최단 경로 존재
        싸이클 : 자기 노드로 돌아오는 경로
        차수 : 노드의 edge 갯수

        edge 가 방향이 없음 -> 무방향 그래프
        edge 가 방향이 있을 경우 (방향 그래프)
            출력 차수 : 나가는 차수, 입력 차수 : 들어오는 차수
            표기 방법 : (시작 노드, 도착 노드)

    가중치 그래프
        edge 마다 가중치 가짐
        무 가중치 그래프 : 가중치가 모두 동일한 edge
        경로의 거리 개념이 바뀜
            거리 : edge 들의 가중치의 합

    트리처럼 루트가 존재하지 않음

    인접 행렬 : 노드들의 연결관계를 나타내는 2차원 리스트
        노드의 고유 정수 인덱스를 행과 열로 세팅하고 인접한 노드는 1로 설정, 나머지는 0으로 설정
        자기 자신끼리는 0으로 설정
        가중치가 있다면 해당 가중치로 설정
        방향이 있다면 행(왼쪽 세로줄)이 시작지점, 열(위쪽 가로줄)이 끝 점 으로 보고 설정
            이 경우엔 대칭적이지 않음

    복잡도 표현 기호
        V : 그래프 안에 있는 모든 노드들의 집합
        노드 대신 vertex 라고도 부름
        E : 노드의 엣지들의 집합
        원래는 아니지만 점근 표기법에서 V: 모든 노드의 수, E: 모든 엣지의 수로 사용
        노드 수가 V일 때 최대 E 갯수
            무방향 그래프 : V^2/2, 방향 그래프 : V^2 에 비례
            즉 E는 최악의 경우 V^2와 비례

        노드 저장하는 공간 O(V)

        인접 행렬이 차지하는 공간
            행렬 크기는 V*V 이므로 O(V^2)

        인접 리스트가 차지하는 공간
            모든 노드는 하나의 인접 리스트를 가짐 -> O(V)만큼의 기본 공간 차지
            모든 엣지 저장 O(E)
            즉 총 공간복잡도 O(V+E)
            (O(E) = O(V^2) 의 극단적인 경우보단 위처럼 현실적으로 표기)

        두 노드가 연결됐는지 확인하는 데 걸리는 시간
            인접 행렬의 인덱스에만 접근하면 되므로 O(1)
            인접 리스트의 경우 선형 탐색을 인한 최악의 경우는 V개

        한 노드에 연결된 모든 노드들을 알아내는데 걸리는 시간
